function IconBuildingCanvasUtil() {
}

IconBuildingCanvasUtil.createBuildingElementTypeIcon = function(elementType, elementTypeGroup, config) {
	switch (elementTypeGroup) {
	case "room":
		switch (elementType) {
		case "auditorium":
			return IconBuildingCanvasUtil.roomAuditorium(config);
		case "class":
			return IconBuildingCanvasUtil.roomClass(config);
		case "cafeteria":
			return IconBuildingCanvasUtil.roomCafeteria(config);
		case "elevator":
			return IconBuildingCanvasUtil.roomElevator(config);
		case "stairs":
			return IconBuildingCanvasUtil.roomStairs(config);
		case "wc":
			return IconBuildingCanvasUtil.roomWc(config);
		}
		break;

	case "device":
		switch (elementType) {
		case "router":
			return IconBuildingCanvasUtil.deviceRouter(config);
		}
		break;
	}
	return null;
};

IconBuildingCanvasUtil.roomAuditorium = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.restore();
			ctx.save();
			ctx.translate(0, -552.36217);
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 0.5390657782554626;
			ctx.lineCap = "butt";
			ctx.lineJoin = "miter";
			ctx.beginPath();
			ctx.moveTo(110.77887, 826.15436);
			ctx.lineTo(283.81195, 826.15436);
			ctx.quadraticCurveTo(283.81195, 826.15436, 283.81195, 826.15436);
			ctx.lineTo(283.81195, 1053.55986);
			ctx.quadraticCurveTo(283.81195, 1053.55986, 283.81195, 1053.55986);
			ctx.lineTo(110.77887, 1053.55986);
			ctx.quadraticCurveTo(110.77887, 1053.55986, 110.77887, 1053.55986);
			ctx.lineTo(110.77887, 826.15436);
			ctx.quadraticCurveTo(110.77887, 826.15436, 110.77887, 826.15436);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.beginPath();
			ctx.moveTo(46.333685, 802.89062);
			ctx.lineTo(359.982269, 802.89062);
			ctx.quadraticCurveTo(373.173097, 802.89062, 373.173097, 816.081448);
			ctx.lineTo(373.173097, 816.081449);
			ctx.quadraticCurveTo(373.173097, 829.272277, 359.982269, 829.272277);
			ctx.lineTo(46.333685, 829.272277);
			ctx.quadraticCurveTo(33.142857, 829.272277, 33.142857, 816.081449);
			ctx.lineTo(33.142857, 816.081448);
			ctx.quadraticCurveTo(33.142857, 802.89062, 46.333685, 802.89062);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.beginPath();
			ctx.moveTo(324.22046, 659.32678);
			ctx.lineTo(360.861653, 659.32678);
			ctx.quadraticCurveTo(360.861653, 659.32678, 360.861653, 659.32678);
			ctx.lineTo(360.861653, 921.9012700000001);
			ctx.quadraticCurveTo(360.861653, 921.9012700000001, 360.861653, 921.9012700000001);
			ctx.lineTo(324.22046, 921.9012700000001);
			ctx.quadraticCurveTo(324.22046, 921.9012700000001, 324.22046, 921.9012700000001);
			ctx.lineTo(324.22046, 659.32678);
			ctx.quadraticCurveTo(324.22046, 659.32678, 324.22046, 659.32678);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.transform(0.68725895, 0.72641251, -0.72641251, 0.68725895, 0, 0);
			ctx.beginPath();
			ctx.moveTo(706.47827, 223.60361);
			ctx.lineTo(742.423468, 223.60361);
			ctx.quadraticCurveTo(742.423468, 223.60361, 742.423468, 223.60361);
			ctx.lineTo(742.423468, 380.0544);
			ctx.quadraticCurveTo(742.423468, 380.0544, 742.423468, 380.0544);
			ctx.lineTo(706.47827, 380.0544);
			ctx.quadraticCurveTo(706.47827, 380.0544, 706.47827, 380.0544);
			ctx.lineTo(706.47827, 223.60361);
			ctx.quadraticCurveTo(706.47827, 223.60361, 706.47827, 223.60361);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.transform(-0.68725895, 0.72641251, 0.72641251, 0.68725895, 0, 0);
			ctx.beginPath();
			ctx.moveTo(236.76581, 720.07587);
			ctx.lineTo(272.711008, 720.07587);
			ctx.quadraticCurveTo(272.711008, 720.07587, 272.711008, 720.07587);
			ctx.lineTo(272.711008, 876.52666);
			ctx.quadraticCurveTo(272.711008, 876.52666, 272.711008, 876.52666);
			ctx.lineTo(236.76581, 876.52666);
			ctx.quadraticCurveTo(236.76581, 876.52666, 236.76581, 876.52666);
			ctx.lineTo(236.76581, 720.07587);
			ctx.quadraticCurveTo(236.76581, 720.07587, 236.76581, 720.07587);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.beginPath();
			ctx.moveTo(397.35862, 610.77485);
			ctx.translate(340.617395, 610.7641971857041);
			ctx.rotate(0);
			ctx.scale(1, 1);
			ctx.arc(0, 0, 56.741226, 0.00018774381702121832, 3.141404909772596, 0);
			ctx.scale(1, 1);
			ctx.rotate(0);
			ctx.translate(-340.617395, -610.7641971857041);
			ctx.translate(340.617395, 610.7641971857041);
			ctx.rotate(0);
			ctx.scale(1, 1);
			ctx.arc(0, 0, 56.741226, 3.141404909772772, 6.283373050996783, 0);
			ctx.scale(1, 1);
			ctx.rotate(0);
			ctx.translate(-340.617395, -610.7641971857041);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

IconBuildingCanvasUtil.roomCafeteria = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.restore();
			ctx.save();
			ctx.translate(0, -552.36218);
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.fillStyle = "#ffffff";
			ctx.lineWidth = 20;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.transform(0.99679019, 0.08005823, -0.08005823, 0.99679019, 0, 0);
			ctx.beginPath();
			ctx.moveTo(531.06171, 740.62244);
			ctx.lineTo(531.06171, 740.62244);
			ctx.quadraticCurveTo(551.06171, 740.62244, 551.06171, 760.62244);
			ctx.lineTo(551.06171, 840.62244);
			ctx.quadraticCurveTo(551.06171, 860.62244, 531.06171, 860.62244);
			ctx.lineTo(531.06171, 860.62244);
			ctx.quadraticCurveTo(511.06171, 860.62244, 511.06171, 840.62244);
			ctx.lineTo(511.06171, 760.62244);
			ctx.quadraticCurveTo(511.06171, 740.62244, 531.06171, 740.62244);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 19.28982925415039;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(28.7971076, 973.63971);
			ctx.lineTo(471.2028916, 973.63971);
			ctx.quadraticCurveTo(490.3550846, 973.63971, 490.3550846, 992.791903);
			ctx.lineTo(490.3550846, 1023.565123);
			ctx.quadraticCurveTo(490.3550846, 1042.717316, 471.2028916, 1042.717316);
			ctx.lineTo(28.7971076, 1042.717316);
			ctx.quadraticCurveTo(9.6449146, 1042.717316, 9.6449146, 1023.565123);
			ctx.lineTo(9.6449146, 992.791903);
			ctx.quadraticCurveTo(9.6449146, 973.63971, 28.7971076, 973.63971);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 20;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(97.64407299999999, 723.23615);
			ctx.lineTo(402.355933, 723.23615);
			ctx.quadraticCurveTo(453.394213, 723.23615, 453.394213, 774.2744299999999);
			ctx.lineTo(453.394213, 921.32391);
			ctx.quadraticCurveTo(453.394213, 972.3621899999999, 402.355933, 972.3621899999999);
			ctx.lineTo(97.64407299999999, 972.3621899999999);
			ctx.quadraticCurveTo(46.605793, 972.3621899999999, 46.605793, 921.32391);
			ctx.lineTo(46.605793, 774.2744299999999);
			ctx.quadraticCurveTo(46.605793, 723.23615, 97.64407299999999, 723.23615);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 20;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(136, 722.36218);
			ctx.bezierCurveTo(266, 672.36218, 136, 642.36218, 136, 642.36218);
			ctx.bezierCurveTo(136, 642.36218, -14, 622.36218, 136, 572.36218);
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 20;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(236, 722.36218);
			ctx.bezierCurveTo(366, 672.36218, 236, 642.36218, 236, 642.36218);
			ctx.bezierCurveTo(236, 642.36218, 86, 622.36218, 236, 572.36218);
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 20;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(336, 722.36218);
			ctx.bezierCurveTo(466, 672.36218, 336, 642.36218, 336, 642.36218);
			ctx.bezierCurveTo(336, 642.36218, 186, 622.36218, 336, 572.36218);
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

IconBuildingCanvasUtil.roomClass = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.restore();
			ctx.save();
			ctx.translate(0, -552.36218);
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 9.963541984558105;
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(6.0199146, 601.99719);
			ctx.lineTo(494.9996546, 601.99719);
			ctx.quadraticCurveTo(494.9996546, 601.99719, 494.9996546, 601.99719);
			ctx.lineTo(494.9996546, 901.30685);
			ctx.quadraticCurveTo(494.9996546, 901.30685, 494.9996546, 901.30685);
			ctx.lineTo(6.0199146, 901.30685);
			ctx.quadraticCurveTo(6.0199146, 901.30685, 6.0199146, 901.30685);
			ctx.lineTo(6.0199146, 601.99719);
			ctx.quadraticCurveTo(6.0199146, 601.99719, 6.0199146, 601.99719);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.beginPath();
			ctx.moveTo(326.44287, 739.16876);
			ctx.lineTo(366.48527800000005, 739.16876);
			ctx.quadraticCurveTo(366.48527800000005, 739.16876, 366.48527800000005, 739.16876);
			ctx.lineTo(366.48527800000005, 1026.1167);
			ctx.quadraticCurveTo(366.48527800000005, 1026.1167, 366.48527800000005, 1026.1167);
			ctx.lineTo(326.44287, 1026.1167);
			ctx.quadraticCurveTo(326.44287, 1026.1167, 326.44287, 1026.1167);
			ctx.lineTo(326.44287, 739.16876);
			ctx.quadraticCurveTo(326.44287, 739.16876, 326.44287, 739.16876);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.transform(0.68725895, 0.72641251, -0.72641251, 0.68725895, 0, 0);
			ctx.beginPath();
			ctx.moveTo(766.44122, 277.4176);
			ctx.lineTo(805.723023, 277.4176);
			ctx.quadraticCurveTo(805.723023, 277.4176, 805.723023, 277.4176);
			ctx.lineTo(805.723023, 448.39096);
			ctx.quadraticCurveTo(805.723023, 448.39096, 805.723023, 448.39096);
			ctx.lineTo(766.44122, 448.39096);
			ctx.quadraticCurveTo(766.44122, 448.39096, 766.44122, 448.39096);
			ctx.lineTo(766.44122, 277.4176);
			ctx.quadraticCurveTo(766.44122, 277.4176, 766.44122, 277.4176);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.transform(-0.68725895, 0.72641251, 0.72641251, 0.68725895, 0, 0);
			ctx.beginPath();
			ctx.moveTo(291.44012, 779.47986);
			ctx.lineTo(330.72192299999995, 779.47986);
			ctx.quadraticCurveTo(330.72192299999995, 779.47986, 330.72192299999995, 779.47986);
			ctx.lineTo(330.72192299999995, 950.4532200000001);
			ctx.quadraticCurveTo(330.72192299999995, 950.4532200000001, 330.72192299999995, 950.4532200000001);
			ctx.lineTo(291.44012, 950.4532200000001);
			ctx.quadraticCurveTo(291.44012, 950.4532200000001, 291.44012, 950.4532200000001);
			ctx.lineTo(291.44012, 779.47986);
			ctx.quadraticCurveTo(291.44012, 779.47986, 291.44012, 779.47986);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.beginPath();
			ctx.moveTo(406.36999, 686.11003);
			ctx.translate(344.36177, 686.0827518278262);
			ctx.rotate(0);
			ctx.scale(1, 1);
			ctx.arc(0, 0, 62.008226, 0.00043991216658584385, 3.1411527414229976, 0);
			ctx.scale(1, 1);
			ctx.rotate(0);
			ctx.translate(-344.36177, -686.0827518278262);
			ctx.translate(344.36177, 686.0827518278262);
			ctx.rotate(0);
			ctx.scale(1, 1);
			ctx.arc(0, 0, 62.008226, 3.141152741423207, 6.283625219346382, 0);
			ctx.scale(1, 1);
			ctx.rotate(0);
			ctx.translate(-344.36177, -686.0827518278262);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 15.001022338867188;
			ctx.miterLimit = 4;
			ctx.transform(0.69446823, 0.71952337, -0.70795709, 0.70625544, 0, 0);
			ctx.beginPath();
			ctx.moveTo(545.40845, 452.83035);
			ctx.lineTo(821.22064, 452.83035);
			ctx.quadraticCurveTo(821.22064, 452.83035, 821.22064, 452.83035);
			ctx.lineTo(821.22064, 460.2824059);
			ctx.quadraticCurveTo(821.22064, 460.2824059, 821.22064, 460.2824059);
			ctx.lineTo(545.40845, 460.2824059);
			ctx.quadraticCurveTo(545.40845, 460.2824059, 545.40845, 460.2824059);
			ctx.lineTo(545.40845, 452.83035);
			ctx.quadraticCurveTo(545.40845, 452.83035, 545.40845, 452.83035);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.save();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

IconBuildingCanvasUtil.roomElevator = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.restore();
			ctx.save();
			ctx.translate(0, -552.36218);
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 20;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.translate(0, 552.36218);
			ctx.beginPath();
			ctx.moveTo(90, 10);
			ctx.lineTo(410, 10);
			ctx.quadraticCurveTo(490, 10, 490, 90);
			ctx.lineTo(490, 410);
			ctx.quadraticCurveTo(490, 490, 410, 490);
			ctx.lineTo(90, 490);
			ctx.quadraticCurveTo(10, 490, 10, 410);
			ctx.lineTo(10, 90);
			ctx.quadraticCurveTo(10, 10, 90, 10);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.beginPath();
			ctx.moveTo(114.684212, 703.36218);
			ctx.lineTo(185.315788, 703.36218);
			ctx.quadraticCurveTo(200, 703.36218, 200, 718.046392);
			ctx.lineTo(200, 967.677968);
			ctx.quadraticCurveTo(200, 982.36218, 185.315788, 982.36218);
			ctx.lineTo(114.684212, 982.36218);
			ctx.quadraticCurveTo(100, 982.36218, 100, 967.677968);
			ctx.lineTo(100, 718.046392);
			ctx.quadraticCurveTo(100, 703.36218, 114.684212, 703.36218);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.transform(1.7822655, 0, 0, 1.3376889, -295.56639, 593.34707);
			ctx.beginPath();
			ctx.moveTo(300.49753, 109.15476);
			ctx.lineTo(199.50247, 109.15476);
			ctx.lineTo(250, 21.690479);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.scale(1, -1);
			ctx.beginPath();
			ctx.moveTo(314.684212, -901.36218);
			ctx.lineTo(385.315788, -901.36218);
			ctx.quadraticCurveTo(400, -901.36218, 400, -886.677968);
			ctx.lineTo(400, -637.046392);
			ctx.quadraticCurveTo(400, -622.36218, 385.315788, -622.36218);
			ctx.lineTo(314.684212, -622.36218);
			ctx.quadraticCurveTo(300, -622.36218, 300, -637.046392);
			ctx.lineTo(300, -886.677968);
			ctx.quadraticCurveTo(300, -901.36218, 314.684212, -901.36218);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.transform(1.7822655, 0, 0, -1.3376889, -95.56639, 1011.3772);
			ctx.beginPath();
			ctx.moveTo(300.49753, 109.15476);
			ctx.lineTo(199.50247, 109.15476);
			ctx.lineTo(250, 21.690479);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

IconBuildingCanvasUtil.roomStairs = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.restore();
			ctx.save();
			ctx.translate(0, -552.36218);
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 20;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(90, 562.36218);
			ctx.lineTo(410, 562.36218);
			ctx.quadraticCurveTo(490, 562.36218, 490, 642.36218);
			ctx.lineTo(490, 962.3621800000001);
			ctx.quadraticCurveTo(490, 1042.36218, 410, 1042.36218);
			ctx.lineTo(90, 1042.36218);
			ctx.quadraticCurveTo(10, 1042.36218, 10, 962.3621800000001);
			ctx.lineTo(10, 642.36218);
			ctx.quadraticCurveTo(10, 562.36218, 90, 562.36218);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = this.attrs.fill;
			ctx.strokeStyle = this.attrs.stroke;
			ctx.lineWidth = 50;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(50, 952.36218);
			ctx.lineTo(150, 952.36218);
			ctx.lineTo(150, 852.36218);
			ctx.lineTo(250, 852.36218);
			ctx.lineTo(250, 752.36218);
			ctx.lineTo(350, 752.36218);
			ctx.lineTo(350, 652.36218);
			ctx.lineTo(450, 652.36218);
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

IconBuildingCanvasUtil.roomWc = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.strokeStyle = 'rgba(0,0,0,0)';
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.restore();
			ctx.save();
			ctx.translate(0, -552.36218);
			ctx.save();
			ctx.fillStyle = "rgba(0, 0, 0, 0)";
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 20;
			ctx.lineCap = "round";
			ctx.lineJoin = "round";
			ctx.miterLimit = 4;
			ctx.beginPath();
			ctx.moveTo(90, 562.36218);
			ctx.lineTo(410, 562.36218);
			ctx.quadraticCurveTo(490, 562.36218, 490, 642.36218);
			ctx.lineTo(490, 962.3621800000001);
			ctx.quadraticCurveTo(490, 1042.36218, 410, 1042.36218);
			ctx.lineTo(90, 1042.36218);
			ctx.quadraticCurveTo(10, 1042.36218, 10, 962.3621800000001);
			ctx.lineTo(10, 642.36218);
			ctx.quadraticCurveTo(10, 562.36218, 90, 562.36218);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.strokeStyle = "rgba(0, 0, 0, 0)";
			ctx.save();
			ctx.font = "bold 235px Verdana";
			ctx.fillText("WC", 34.073997, 883.83307);
			ctx.restore();
			ctx.restore();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

// ... DEVICE

IconBuildingCanvasUtil.deviceRouter = function(config) {
	config = config || {};
	var icon = new Kinetic.Shape({
		drawFunc : function(canvas) {
			var ctx = canvas.getContext();
			ctx.save();
			ctx.fillStyle = "rgba(0, 0, 0, 0)";
			ctx.strokeStyle = "rgba(0, 0, 0, 0)";
			ctx.lineCap = "square";
			ctx.miterLimit = 10;
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(500, 0);
			ctx.lineTo(500, 500);
			ctx.lineTo(0, 500);
			ctx.closePath();
			ctx.clip();
			ctx.translate(0, 0);
			ctx.translate(0, 0);
			ctx.scale(5, 5);
			ctx.translate(0, 0);
			ctx.strokeStyle = 'rgba(0,0,0,0)';
			ctx.lineCap = 'butt';
			ctx.lineJoin = 'miter';
			ctx.miterLimit = 4;
			ctx.save();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(100, 0);
			ctx.lineTo(100, 100);
			ctx.lineTo(0, 100);
			ctx.lineTo(0, 0);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.save();
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(100, 0);
			ctx.lineTo(100, 100);
			ctx.lineTo(0, 100);
			ctx.lineTo(0, 0);
			ctx.closePath();
			ctx.clip();
			ctx.save();
			ctx.fillStyle = "rgba(0, 0, 0, 0)";
			ctx.beginPath();
			ctx.moveTo(0, 0);
			ctx.lineTo(100, 0);
			ctx.lineTo(100, 100);
			ctx.lineTo(0, 100);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(66.55901, 8.394093);
			ctx.lineTo(66.55901, 8.394093);
			ctx.bezierCurveTo(66.55901, 7.41454073, 67.35309264, 6.6204567, 68.3326459, 6.6204567);
			ctx.lineTo(69.25780917, 6.6204567);
			ctx.lineTo(69.25780917, 6.6204567);
			ctx.bezierCurveTo(69.72820712000001, 6.6204567, 70.17934087, 6.80732155, 70.51195957, 7.13994265);
			ctx.bezierCurveTo(70.84458591, 7.47256422, 71.03144507, 7.92369509, 71.03144507, 8.39409305);
			ctx.lineTo(71.03144507, 46.92556005);
			ctx.bezierCurveTo(71.03144507, 47.90511325, 70.23736243, 48.699195950000004, 69.25780917, 48.699195950000004);
			ctx.lineTo(68.3326459, 48.699195950000004);
			ctx.bezierCurveTo(67.3530927, 48.699195950000004, 66.55901, 47.905113310000004, 66.55901, 46.92556005);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(66.55901, 8.394093);
			ctx.lineTo(66.55901, 8.394093);
			ctx.bezierCurveTo(66.55901, 7.41454073, 67.35309264, 6.6204567, 68.3326459, 6.6204567);
			ctx.lineTo(69.25780917, 6.6204567);
			ctx.lineTo(69.25780917, 6.6204567);
			ctx.bezierCurveTo(69.72820712000001, 6.6204567, 70.17934087, 6.80732155, 70.51195957, 7.13994265);
			ctx.bezierCurveTo(70.84458591, 7.47256422, 71.03144507, 7.92369509, 71.03144507, 8.39409305);
			ctx.lineTo(71.03144507, 46.92556005);
			ctx.bezierCurveTo(71.03144507, 47.90511325, 70.23736243, 48.699195950000004, 69.25780917, 48.699195950000004);
			ctx.lineTo(68.3326459, 48.699195950000004);
			ctx.bezierCurveTo(67.3530927, 48.699195950000004, 66.55901, 47.905113310000004, 66.55901, 46.92556005);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.beginPath();
			ctx.moveTo(5.858268, 78.70576);
			ctx.lineTo(19.834554999999998, 39.965606);
			ctx.lineTo(80.165442, 39.965606);
			ctx.lineTo(94.14173, 78.70576);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(5.858268, 78.70576);
			ctx.lineTo(19.834554999999998, 39.965606);
			ctx.lineTo(80.165442, 39.965606);
			ctx.lineTo(94.14173, 78.70576);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#ffffff";
			ctx.beginPath();
			ctx.moveTo(5.102362, 81.04363);
			ctx.lineTo(5.102362, 81.04363);
			ctx.bezierCurveTo(5.102362, 79.6810125, 6.2069834, 78.5763906, 7.5696028, 78.5763906);
			ctx.lineTo(92.4303968, 78.5763906);
			ctx.bezierCurveTo(93.0847471, 78.5763906, 93.7123029, 78.8363317, 94.1750028, 79.29903159999999);
			ctx.bezierCurveTo(94.63769506, 79.76172385999999, 94.89763616, 80.38927969999999, 94.89763616, 81.04363);
			ctx.lineTo(94.89763616, 90.91229799999999);
			ctx.bezierCurveTo(94.89763616, 92.2749231, 93.79301426, 93.379545, 92.43039676000001, 93.379545);
			ctx.lineTo(7.569602760000009, 93.379545);
			ctx.bezierCurveTo(6.2069833600000095, 93.379545, 5.102361960000009, 92.2749231, 5.102361960000009, 90.91229799999999);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(5.102362, 81.04363);
			ctx.lineTo(5.102362, 81.04363);
			ctx.bezierCurveTo(5.102362, 79.6810125, 6.2069834, 78.5763906, 7.5696028, 78.5763906);
			ctx.lineTo(92.4303968, 78.5763906);
			ctx.bezierCurveTo(93.0847471, 78.5763906, 93.7123029, 78.8363317, 94.1750028, 79.29903159999999);
			ctx.bezierCurveTo(94.63769506, 79.76172385999999, 94.89763616, 80.38927969999999, 94.89763616, 81.04363);
			ctx.lineTo(94.89763616, 90.91229799999999);
			ctx.bezierCurveTo(94.89763616, 92.2749231, 93.79301426, 93.379545, 92.43039676000001, 93.379545);
			ctx.lineTo(7.569602760000009, 93.379545);
			ctx.bezierCurveTo(6.2069833600000095, 93.379545, 5.102361960000009, 92.2749231, 5.102361960000009, 90.91229799999999);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(12.3307085, 84.644646);
			ctx.lineTo(12.3307085, 84.644646);
			ctx.bezierCurveTo(12.3307085, 84.27645142, 12.6291914, 83.97796659999999, 12.99738884, 83.97796659999999);
			ctx.lineTo(21.20733684, 83.97796659999999);
			ctx.bezierCurveTo(21.38414997, 83.97796659999999, 21.5537228, 84.04821043499999, 21.6787495, 84.17323332);
			ctx.bezierCurveTo(21.803776199999998, 84.29826383999999, 21.874016219999998, 84.46783475999999, 21.874016219999998, 84.64464597999999);
			ctx.lineTo(21.874016219999998, 87.31128718);
			ctx.bezierCurveTo(21.874016219999998, 87.67948937999999, 21.575533319999998, 87.97796658, 21.20733682, 87.97796658);
			ctx.lineTo(12.997388819999998, 87.97796658);
			ctx.bezierCurveTo(12.629191379999998, 87.97796658, 12.330708479999998, 87.67948941, 12.330708479999998, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(12.3307085, 84.644646);
			ctx.lineTo(12.3307085, 84.644646);
			ctx.bezierCurveTo(12.3307085, 84.27645142, 12.6291914, 83.97796659999999, 12.99738884, 83.97796659999999);
			ctx.lineTo(21.20733684, 83.97796659999999);
			ctx.bezierCurveTo(21.38414997, 83.97796659999999, 21.5537228, 84.04821043499999, 21.6787495, 84.17323332);
			ctx.bezierCurveTo(21.803776199999998, 84.29826383999999, 21.874016219999998, 84.46783475999999, 21.874016219999998, 84.64464597999999);
			ctx.lineTo(21.874016219999998, 87.31128718);
			ctx.bezierCurveTo(21.874016219999998, 87.67948937999999, 21.575533319999998, 87.97796658, 21.20733682, 87.97796658);
			ctx.lineTo(12.997388819999998, 87.97796658);
			ctx.bezierCurveTo(12.629191379999998, 87.97796658, 12.330708479999998, 87.67948941, 12.330708479999998, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(33.936855, 84.644646);
			ctx.lineTo(33.936855, 84.644646);
			ctx.bezierCurveTo(33.936855, 84.27645142, 34.235336000000004, 83.97796659999999, 34.6035344, 83.97796659999999);
			ctx.lineTo(42.8134804, 83.97796659999999);
			ctx.bezierCurveTo(42.99029543, 83.97796659999999, 43.159870170000005, 84.04821043499999, 43.284896870000004, 84.17323332);
			ctx.bezierCurveTo(43.409923570000004, 84.29826383999999, 43.48015978, 84.46783475999999, 43.48015978, 84.64464597999999);
			ctx.lineTo(43.48015978, 87.31128718);
			ctx.bezierCurveTo(43.48015978, 87.67948937999999, 43.18167878, 87.97796658, 42.81348038, 87.97796658);
			ctx.lineTo(34.60353438, 87.97796658);
			ctx.bezierCurveTo(34.23533598, 87.97796658, 33.93685498, 87.67948941, 33.93685498, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(33.936855, 84.644646);
			ctx.lineTo(33.936855, 84.644646);
			ctx.bezierCurveTo(33.936855, 84.27645142, 34.235336000000004, 83.97796659999999, 34.6035344, 83.97796659999999);
			ctx.lineTo(42.8134804, 83.97796659999999);
			ctx.bezierCurveTo(42.99029543, 83.97796659999999, 43.159870170000005, 84.04821043499999, 43.284896870000004, 84.17323332);
			ctx.bezierCurveTo(43.409923570000004, 84.29826383999999, 43.48015978, 84.46783475999999, 43.48015978, 84.64464597999999);
			ctx.lineTo(43.48015978, 87.31128718);
			ctx.bezierCurveTo(43.48015978, 87.67948937999999, 43.18167878, 87.97796658, 42.81348038, 87.97796658);
			ctx.lineTo(34.60353438, 87.97796658);
			ctx.bezierCurveTo(34.23533598, 87.97796658, 33.93685498, 87.67948941, 33.93685498, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(55.149403, 84.644646);
			ctx.lineTo(55.149403, 84.644646);
			ctx.bezierCurveTo(55.149403, 84.27645142, 55.447884, 83.97796659999999, 55.8160824, 83.97796659999999);
			ctx.lineTo(64.02603189999999, 83.97796659999999);
			ctx.bezierCurveTo(64.20284312, 83.97796659999999, 64.37241404, 84.04821043499999, 64.49744455999999, 84.17323332);
			ctx.bezierCurveTo(64.62246744999999, 84.29826383999999, 64.69271128, 84.46783475999999, 64.69271128, 84.64464597999999);
			ctx.lineTo(64.69271128, 87.31128718);
			ctx.bezierCurveTo(64.69271128, 87.67948937999999, 64.39422648, 87.97796658, 64.02603187999999, 87.97796658);
			ctx.lineTo(55.81608237999999, 87.97796658);
			ctx.bezierCurveTo(55.44788397999999, 87.97796658, 55.14940297999999, 87.67948941, 55.14940297999999, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(55.149403, 84.644646);
			ctx.lineTo(55.149403, 84.644646);
			ctx.bezierCurveTo(55.149403, 84.27645142, 55.447884, 83.97796659999999, 55.8160824, 83.97796659999999);
			ctx.lineTo(64.02603189999999, 83.97796659999999);
			ctx.bezierCurveTo(64.20284312, 83.97796659999999, 64.37241404, 84.04821043499999, 64.49744455999999, 84.17323332);
			ctx.bezierCurveTo(64.62246744999999, 84.29826383999999, 64.69271128, 84.46783475999999, 64.69271128, 84.64464597999999);
			ctx.lineTo(64.69271128, 87.31128718);
			ctx.bezierCurveTo(64.69271128, 87.67948937999999, 64.39422648, 87.97796658, 64.02603187999999, 87.97796658);
			ctx.lineTo(55.81608237999999, 87.97796658);
			ctx.bezierCurveTo(55.44788397999999, 87.97796658, 55.14940297999999, 87.67948941, 55.14940297999999, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(78.051636, 84.644646);
			ctx.lineTo(78.051636, 84.644646);
			ctx.bezierCurveTo(78.051636, 84.27645142, 78.35011317, 83.97796659999999, 78.71831540000001, 83.97796659999999);
			ctx.lineTo(86.92826140000001, 83.97796659999999);
			ctx.bezierCurveTo(87.10507262000002, 83.97796659999999, 87.27465117000001, 84.04821043499999, 87.39967406000001, 84.17323332);
			ctx.bezierCurveTo(87.52470458, 84.29826383999999, 87.59494078000002, 84.46783475999999, 87.59494078000002, 84.64464597999999);
			ctx.lineTo(87.59494078000002, 87.31128718);
			ctx.bezierCurveTo(87.59494078000002, 87.67948937999999, 87.29645598000002, 87.97796658, 86.92826138000001, 87.97796658);
			ctx.lineTo(78.71831538, 87.97796658);
			ctx.bezierCurveTo(78.35011318000001, 87.97796658, 78.05163598, 87.67948941, 78.05163598, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(78.051636, 84.644646);
			ctx.lineTo(78.051636, 84.644646);
			ctx.bezierCurveTo(78.051636, 84.27645142, 78.35011317, 83.97796659999999, 78.71831540000001, 83.97796659999999);
			ctx.lineTo(86.92826140000001, 83.97796659999999);
			ctx.bezierCurveTo(87.10507262000002, 83.97796659999999, 87.27465117000001, 84.04821043499999, 87.39967406000001, 84.17323332);
			ctx.bezierCurveTo(87.52470458, 84.29826383999999, 87.59494078000002, 84.46783475999999, 87.59494078000002, 84.64464597999999);
			ctx.lineTo(87.59494078000002, 87.31128718);
			ctx.bezierCurveTo(87.59494078000002, 87.67948937999999, 87.29645598000002, 87.97796658, 86.92826138000001, 87.97796658);
			ctx.lineTo(78.71831538, 87.97796658);
			ctx.bezierCurveTo(78.35011318000001, 87.97796658, 78.05163598, 87.67948941, 78.05163598, 87.31128718);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(33.47835, 73.214325);
			ctx.lineTo(33.47835, 73.214325);
			ctx.bezierCurveTo(36.512583, 67.172676, 42.60261, 63.269009000000004, 49.359328, 63.034725);
			ctx.bezierCurveTo(56.1160457, 62.80044537, 62.461833, 66.27291100000001, 65.907248, 72.08989700000001);
			ctx.lineTo(63.7772698, 73.35148600000001);
			ctx.lineTo(63.7772698, 73.35148600000001);
			ctx.bezierCurveTo(60.7931923, 68.3134, 55.2971098, 65.30590000000001, 49.4451128, 65.50880400000001);
			ctx.bezierCurveTo(43.5931192, 65.71171538000002, 38.318548799999995, 69.0926816, 35.6905998, 74.32536300000001);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(33.47835, 73.214325);
			ctx.lineTo(33.47835, 73.214325);
			ctx.bezierCurveTo(36.512583, 67.172676, 42.60261, 63.269009000000004, 49.359328, 63.034725);
			ctx.bezierCurveTo(56.1160457, 62.80044537, 62.461833, 66.27291100000001, 65.907248, 72.08989700000001);
			ctx.lineTo(63.7772698, 73.35148600000001);
			ctx.lineTo(63.7772698, 73.35148600000001);
			ctx.bezierCurveTo(60.7931923, 68.3134, 55.2971098, 65.30590000000001, 49.4451128, 65.50880400000001);
			ctx.bezierCurveTo(43.5931192, 65.71171538000002, 38.318548799999995, 69.0926816, 35.6905998, 74.32536300000001);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(27.653082, 66.28163);
			ctx.lineTo(27.653082, 66.28163);
			ctx.bezierCurveTo(31.698410000000003, 58.35574580000001, 40.084042000000004, 53.23534600000001, 49.379360000000005, 53.01521900000001);
			ctx.bezierCurveTo(58.674679000000005, 52.79509571000001, 67.320244, 57.512175000000006, 71.779098, 65.23667);
			ctx.lineTo(69.6920695, 66.31638190000001);
			ctx.lineTo(69.6920695, 66.31638190000001);
			ctx.bezierCurveTo(65.64598050000001, 59.38918920000001, 57.832767000000004, 55.16390890000001, 49.4361455, 55.36225790000001);
			ctx.bezierCurveTo(41.0395235, 55.56060690000001, 33.461383500000004, 60.14947390000001, 29.7896615, 67.25898640000001);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(27.653082, 66.28163);
			ctx.lineTo(27.653082, 66.28163);
			ctx.bezierCurveTo(31.698410000000003, 58.35574580000001, 40.084042000000004, 53.23534600000001, 49.379360000000005, 53.01521900000001);
			ctx.bezierCurveTo(58.674679000000005, 52.79509571000001, 67.320244, 57.512175000000006, 71.779098, 65.23667);
			ctx.lineTo(69.6920695, 66.31638190000001);
			ctx.lineTo(69.6920695, 66.31638190000001);
			ctx.bezierCurveTo(65.64598050000001, 59.38918920000001, 57.832767000000004, 55.16390890000001, 49.4361455, 55.36225790000001);
			ctx.bezierCurveTo(41.0395235, 55.56060690000001, 33.461383500000004, 60.14947390000001, 29.7896615, 67.25898640000001);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.fillStyle = "#000000";
			ctx.beginPath();
			ctx.moveTo(21.195194, 59.838486);
			ctx.lineTo(21.195194, 59.838486);
			ctx.bezierCurveTo(25.882225000000002, 51.000817000000005, 37.152939, 45.178826, 49.733135000000004, 45.096947);
			ctx.bezierCurveTo(62.313331000000005, 45.01506834, 73.714622, 50.689503, 78.601707, 59.464859000000004);
			ctx.lineTo(76.79530290000001, 60.04131316);
			ctx.lineTo(76.79530290000001, 60.04131316);
			ctx.bezierCurveTo(72.15169490000001, 52.04235816, 61.49065690000001, 46.88839316, 49.74549090000001, 46.96437116);
			ctx.bezierCurveTo(38.00032790000001, 47.040344669999996, 27.462197900000007, 52.33144416, 23.007540900000006, 60.38925216);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.save();
			ctx.strokeStyle = "#000000";
			ctx.lineWidth = 2;
			ctx.lineCap = "butt";
			ctx.lineJoin = "round";
			ctx.beginPath();
			ctx.moveTo(21.195194, 59.838486);
			ctx.lineTo(21.195194, 59.838486);
			ctx.bezierCurveTo(25.882225000000002, 51.000817000000005, 37.152939, 45.178826, 49.733135000000004, 45.096947);
			ctx.bezierCurveTo(62.313331000000005, 45.01506834, 73.714622, 50.689503, 78.601707, 59.464859000000004);
			ctx.lineTo(76.79530290000001, 60.04131316);
			ctx.lineTo(76.79530290000001, 60.04131316);
			ctx.bezierCurveTo(72.15169490000001, 52.04235816, 61.49065690000001, 46.88839316, 49.74549090000001, 46.96437116);
			ctx.bezierCurveTo(38.00032790000001, 47.040344669999996, 27.462197900000007, 52.33144416, 23.007540900000006, 60.38925216);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
			ctx.restore();
			ctx.restore();
			ctx.restore();
		},
		scale : 0.05,
		height : 25,
		width : 25,
		fill : "#000000",
		stroke : "#000000"
	});
	icon.setAttrs(config);

	return icon;
};

// ... DEVICE
